<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>本 on nmta blog</title>
    <link>https://neutrinoboy.jp/tags/%E6%9C%AC/</link>
    <description>Recent content in 本 on nmta blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 17 Dec 2019 08:46:48 +0000</lastBuildDate>
    
	<atom:link href="https://neutrinoboy.jp/tags/%E6%9C%AC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>アジャイルサムライ</title>
      <link>https://neutrinoboy.jp/2019/12/17/2006171812/</link>
      <pubDate>Tue, 17 Dec 2019 08:46:48 +0000</pubDate>
      
      <guid>https://neutrinoboy.jp/2019/12/17/2006171812/</guid>
      <description>アジャイルサムライを読んだ。メモしながら、資料を作りながら何度も読み返していたので常に持ち歩き、長いこと読んでいた。
思い返せば5年程前だろうか（もっとかな？）。その頃はまだ前の職場だが、アジャイルサムライによって作業の進め方がアジャイルに変わった。
ユニットテスト、リファクタリング、継続的インテグレーションなど今では当たり前となったものの、実施しない開発があるからこそ、あらためて重要だと感じる。
当時は余裕もあったし、やるのが当たり前ではあったが、それは自社サービスならではの発想なのかもしれない。
締め切りに追われたり、度重なる仕様変更などストレスやプレッシャーに晒される状況ではその当たり前を維持することはできず、その場限りの対応で済ませることもよくある。
自分一人で作業するならまだしも、プロジェクトのために集められたはじめてのメンバーにアジャイルを理解してもらい対応してもらう余裕もパワーも自分にはなかった。
その結果はアジャイルサムライに記載の通り、技術的負債を抱えたソースコードの山。バグも積み残し、デバッグには長時間を要する。テストなどない。マージもできない。デプロイも失敗する。そんな状況で追加開発や仕様変更など対応できるはずもない。
しかし、この状況を解決するためのアジャイルである。この状況でこそアジャイルな開発を行わなければいけなかったと改めて感じた。</description>
    </item>
    
  </channel>
</rss>